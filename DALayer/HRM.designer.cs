#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DALayer
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="hrm")]
	public partial class HRMDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertctblCity(ctblCity instance);
    partial void UpdatectblCity(ctblCity instance);
    partial void DeletectblCity(ctblCity instance);
    partial void InsertmtblUserRole(mtblUserRole instance);
    partial void UpdatemtblUserRole(mtblUserRole instance);
    partial void DeletemtblUserRole(mtblUserRole instance);
    partial void InsertctblDisability(ctblDisability instance);
    partial void UpdatectblDisability(ctblDisability instance);
    partial void DeletectblDisability(ctblDisability instance);
    partial void InsertctblDistrict(ctblDistrict instance);
    partial void UpdatectblDistrict(ctblDistrict instance);
    partial void DeletectblDistrict(ctblDistrict instance);
    partial void InsertctblLoginDetail(ctblLoginDetail instance);
    partial void UpdatectblLoginDetail(ctblLoginDetail instance);
    partial void DeletectblLoginDetail(ctblLoginDetail instance);
    partial void InsertctblState(ctblState instance);
    partial void UpdatectblState(ctblState instance);
    partial void DeletectblState(ctblState instance);
    partial void InsertmtblCountry(mtblCountry instance);
    partial void UpdatemtblCountry(mtblCountry instance);
    partial void DeletemtblCountry(mtblCountry instance);
    partial void InsertmtblUser(mtblUser instance);
    partial void UpdatemtblUser(mtblUser instance);
    partial void DeletemtblUser(mtblUser instance);
    partial void InsertmtblAccYear(mtblAccYear instance);
    partial void UpdatemtblAccYear(mtblAccYear instance);
    partial void DeletemtblAccYear(mtblAccYear instance);
    partial void InsertmtblCategory(mtblCategory instance);
    partial void UpdatemtblCategory(mtblCategory instance);
    partial void DeletemtblCategory(mtblCategory instance);
    partial void InsertmtblDepartment(mtblDepartment instance);
    partial void UpdatemtblDepartment(mtblDepartment instance);
    partial void DeletemtblDepartment(mtblDepartment instance);
    partial void InsertmtblDesignation(mtblDesignation instance);
    partial void UpdatemtblDesignation(mtblDesignation instance);
    partial void DeletemtblDesignation(mtblDesignation instance);
    partial void InsertctblCompEsiDetail(ctblCompEsiDetail instance);
    partial void UpdatectblCompEsiDetail(ctblCompEsiDetail instance);
    partial void DeletectblCompEsiDetail(ctblCompEsiDetail instance);
    partial void InsertmtblCompany(mtblCompany instance);
    partial void UpdatemtblCompany(mtblCompany instance);
    partial void DeletemtblCompany(mtblCompany instance);
    partial void InsertmtblEmployee(mtblEmployee instance);
    partial void UpdatemtblEmployee(mtblEmployee instance);
    partial void DeletemtblEmployee(mtblEmployee instance);
    #endregion
		
		public HRMDataContext() : 
				base(global::DALayer.Properties.Settings.Default.hrmConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public HRMDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HRMDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HRMDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HRMDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ctblCity> ctblCities
		{
			get
			{
				return this.GetTable<ctblCity>();
			}
		}
		
		public System.Data.Linq.Table<mtblUserRole> mtblUserRoles
		{
			get
			{
				return this.GetTable<mtblUserRole>();
			}
		}
		
		public System.Data.Linq.Table<ctblDisability> ctblDisabilities
		{
			get
			{
				return this.GetTable<ctblDisability>();
			}
		}
		
		public System.Data.Linq.Table<ctblDistrict> ctblDistricts
		{
			get
			{
				return this.GetTable<ctblDistrict>();
			}
		}
		
		public System.Data.Linq.Table<ctblLoginDetail> ctblLoginDetails
		{
			get
			{
				return this.GetTable<ctblLoginDetail>();
			}
		}
		
		public System.Data.Linq.Table<ctblState> ctblStates
		{
			get
			{
				return this.GetTable<ctblState>();
			}
		}
		
		public System.Data.Linq.Table<mtblCountry> mtblCountries
		{
			get
			{
				return this.GetTable<mtblCountry>();
			}
		}
		
		public System.Data.Linq.Table<mtblUser> mtblUsers
		{
			get
			{
				return this.GetTable<mtblUser>();
			}
		}
		
		public System.Data.Linq.Table<mtblAccYear> mtblAccYears
		{
			get
			{
				return this.GetTable<mtblAccYear>();
			}
		}
		
		public System.Data.Linq.Table<mtblCategory> mtblCategories
		{
			get
			{
				return this.GetTable<mtblCategory>();
			}
		}
		
		public System.Data.Linq.Table<mtblDepartment> mtblDepartments
		{
			get
			{
				return this.GetTable<mtblDepartment>();
			}
		}
		
		public System.Data.Linq.Table<mtblDesignation> mtblDesignations
		{
			get
			{
				return this.GetTable<mtblDesignation>();
			}
		}
		
		public System.Data.Linq.Table<ctblCompEsiDetail> ctblCompEsiDetails
		{
			get
			{
				return this.GetTable<ctblCompEsiDetail>();
			}
		}
		
		public System.Data.Linq.Table<mtblCompany> mtblCompanies
		{
			get
			{
				return this.GetTable<mtblCompany>();
			}
		}
		
		public System.Data.Linq.Table<mtblEmployee> mtblEmployees
		{
			get
			{
				return this.GetTable<mtblEmployee>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetIdentity")]
		public ISingleResult<GetIdentityResult> GetIdentity([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TableName", DbType="VarChar(50)")] string tableName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), tableName);
			return ((ISingleResult<GetIdentityResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ctblCity")]
	public partial class ctblCity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _intCityId;
		
		private decimal _intDistrictId;
		
		private string _varCity;
		
		private EntityRef<ctblDistrict> _ctblDistrict;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnintCityIdChanging(decimal value);
    partial void OnintCityIdChanged();
    partial void OnintDistrictIdChanging(decimal value);
    partial void OnintDistrictIdChanged();
    partial void OnvarCityChanging(string value);
    partial void OnvarCityChanged();
    #endregion
		
		public ctblCity()
		{
			this._ctblDistrict = default(EntityRef<ctblDistrict>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intCityId", AutoSync=AutoSync.OnInsert, DbType="Decimal(6,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal intCityId
		{
			get
			{
				return this._intCityId;
			}
			set
			{
				if ((this._intCityId != value))
				{
					this.OnintCityIdChanging(value);
					this.SendPropertyChanging();
					this._intCityId = value;
					this.SendPropertyChanged("intCityId");
					this.OnintCityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intDistrictId", DbType="Decimal(6,0) NOT NULL")]
		public decimal intDistrictId
		{
			get
			{
				return this._intDistrictId;
			}
			set
			{
				if ((this._intDistrictId != value))
				{
					if (this._ctblDistrict.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnintDistrictIdChanging(value);
					this.SendPropertyChanging();
					this._intDistrictId = value;
					this.SendPropertyChanged("intDistrictId");
					this.OnintDistrictIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_varCity", DbType="VarChar(20)")]
		public string varCity
		{
			get
			{
				return this._varCity;
			}
			set
			{
				if ((this._varCity != value))
				{
					this.OnvarCityChanging(value);
					this.SendPropertyChanging();
					this._varCity = value;
					this.SendPropertyChanged("varCity");
					this.OnvarCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ctblDistrict_ctblCity", Storage="_ctblDistrict", ThisKey="intDistrictId", OtherKey="intDistrictId", IsForeignKey=true)]
		public ctblDistrict ctblDistrict
		{
			get
			{
				return this._ctblDistrict.Entity;
			}
			set
			{
				ctblDistrict previousValue = this._ctblDistrict.Entity;
				if (((previousValue != value) 
							|| (this._ctblDistrict.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ctblDistrict.Entity = null;
						previousValue.ctblCities.Remove(this);
					}
					this._ctblDistrict.Entity = value;
					if ((value != null))
					{
						value.ctblCities.Add(this);
						this._intDistrictId = value.intDistrictId;
					}
					else
					{
						this._intDistrictId = default(decimal);
					}
					this.SendPropertyChanged("ctblDistrict");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mtblUserRole")]
	public partial class mtblUserRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _intUserRoleId;
		
		private string _varUserRole;
		
		private string _varMasterFile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnintUserRoleIdChanging(decimal value);
    partial void OnintUserRoleIdChanged();
    partial void OnvarUserRoleChanging(string value);
    partial void OnvarUserRoleChanged();
    partial void OnvarMasterFileChanging(string value);
    partial void OnvarMasterFileChanged();
    #endregion
		
		public mtblUserRole()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intUserRoleId", AutoSync=AutoSync.OnInsert, DbType="Decimal(6,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal intUserRoleId
		{
			get
			{
				return this._intUserRoleId;
			}
			set
			{
				if ((this._intUserRoleId != value))
				{
					this.OnintUserRoleIdChanging(value);
					this.SendPropertyChanging();
					this._intUserRoleId = value;
					this.SendPropertyChanged("intUserRoleId");
					this.OnintUserRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_varUserRole", DbType="VarChar(20)")]
		public string varUserRole
		{
			get
			{
				return this._varUserRole;
			}
			set
			{
				if ((this._varUserRole != value))
				{
					this.OnvarUserRoleChanging(value);
					this.SendPropertyChanging();
					this._varUserRole = value;
					this.SendPropertyChanged("varUserRole");
					this.OnvarUserRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_varMasterFile", DbType="VarChar(30)")]
		public string varMasterFile
		{
			get
			{
				return this._varMasterFile;
			}
			set
			{
				if ((this._varMasterFile != value))
				{
					this.OnvarMasterFileChanging(value);
					this.SendPropertyChanging();
					this._varMasterFile = value;
					this.SendPropertyChanged("varMasterFile");
					this.OnvarMasterFileChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ctblDisability")]
	public partial class ctblDisability : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _intDisability;
		
		private string _varDisablrType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnintDisabilityChanging(decimal value);
    partial void OnintDisabilityChanged();
    partial void OnvarDisablrTypeChanging(string value);
    partial void OnvarDisablrTypeChanged();
    #endregion
		
		public ctblDisability()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intDisability", AutoSync=AutoSync.OnInsert, DbType="Decimal(6,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal intDisability
		{
			get
			{
				return this._intDisability;
			}
			set
			{
				if ((this._intDisability != value))
				{
					this.OnintDisabilityChanging(value);
					this.SendPropertyChanging();
					this._intDisability = value;
					this.SendPropertyChanged("intDisability");
					this.OnintDisabilityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_varDisablrType", DbType="VarChar(30)")]
		public string varDisablrType
		{
			get
			{
				return this._varDisablrType;
			}
			set
			{
				if ((this._varDisablrType != value))
				{
					this.OnvarDisablrTypeChanging(value);
					this.SendPropertyChanging();
					this._varDisablrType = value;
					this.SendPropertyChanged("varDisablrType");
					this.OnvarDisablrTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ctblDistrict")]
	public partial class ctblDistrict : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _intDistrictId;
		
		private decimal _intStateId;
		
		private string _varDistrict;
		
		private EntitySet<ctblCity> _ctblCities;
		
		private EntityRef<ctblState> _ctblState;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnintDistrictIdChanging(decimal value);
    partial void OnintDistrictIdChanged();
    partial void OnintStateIdChanging(decimal value);
    partial void OnintStateIdChanged();
    partial void OnvarDistrictChanging(string value);
    partial void OnvarDistrictChanged();
    #endregion
		
		public ctblDistrict()
		{
			this._ctblCities = new EntitySet<ctblCity>(new Action<ctblCity>(this.attach_ctblCities), new Action<ctblCity>(this.detach_ctblCities));
			this._ctblState = default(EntityRef<ctblState>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intDistrictId", AutoSync=AutoSync.OnInsert, DbType="Decimal(6,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal intDistrictId
		{
			get
			{
				return this._intDistrictId;
			}
			set
			{
				if ((this._intDistrictId != value))
				{
					this.OnintDistrictIdChanging(value);
					this.SendPropertyChanging();
					this._intDistrictId = value;
					this.SendPropertyChanged("intDistrictId");
					this.OnintDistrictIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intStateId", DbType="Decimal(6,0) NOT NULL")]
		public decimal intStateId
		{
			get
			{
				return this._intStateId;
			}
			set
			{
				if ((this._intStateId != value))
				{
					if (this._ctblState.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnintStateIdChanging(value);
					this.SendPropertyChanging();
					this._intStateId = value;
					this.SendPropertyChanged("intStateId");
					this.OnintStateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_varDistrict", DbType="VarChar(20)")]
		public string varDistrict
		{
			get
			{
				return this._varDistrict;
			}
			set
			{
				if ((this._varDistrict != value))
				{
					this.OnvarDistrictChanging(value);
					this.SendPropertyChanging();
					this._varDistrict = value;
					this.SendPropertyChanged("varDistrict");
					this.OnvarDistrictChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ctblDistrict_ctblCity", Storage="_ctblCities", ThisKey="intDistrictId", OtherKey="intDistrictId")]
		public EntitySet<ctblCity> ctblCities
		{
			get
			{
				return this._ctblCities;
			}
			set
			{
				this._ctblCities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ctblState_ctblDistrict", Storage="_ctblState", ThisKey="intStateId", OtherKey="intStateId", IsForeignKey=true)]
		public ctblState ctblState
		{
			get
			{
				return this._ctblState.Entity;
			}
			set
			{
				ctblState previousValue = this._ctblState.Entity;
				if (((previousValue != value) 
							|| (this._ctblState.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ctblState.Entity = null;
						previousValue.ctblDistricts.Remove(this);
					}
					this._ctblState.Entity = value;
					if ((value != null))
					{
						value.ctblDistricts.Add(this);
						this._intStateId = value.intStateId;
					}
					else
					{
						this._intStateId = default(decimal);
					}
					this.SendPropertyChanged("ctblState");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ctblCities(ctblCity entity)
		{
			this.SendPropertyChanging();
			entity.ctblDistrict = this;
		}
		
		private void detach_ctblCities(ctblCity entity)
		{
			this.SendPropertyChanging();
			entity.ctblDistrict = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ctblLoginDetail")]
	public partial class ctblLoginDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _intLoginDetailsId;
		
		private System.Nullable<System.DateTime> _dtDate;
		
		private string _varIPNo;
		
		private System.Nullable<decimal> _intId;
		
		private string _varType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnintLoginDetailsIdChanging(decimal value);
    partial void OnintLoginDetailsIdChanged();
    partial void OndtDateChanging(System.Nullable<System.DateTime> value);
    partial void OndtDateChanged();
    partial void OnvarIPNoChanging(string value);
    partial void OnvarIPNoChanged();
    partial void OnintIdChanging(System.Nullable<decimal> value);
    partial void OnintIdChanged();
    partial void OnvarTypeChanging(string value);
    partial void OnvarTypeChanged();
    #endregion
		
		public ctblLoginDetail()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intLoginDetailsId", AutoSync=AutoSync.OnInsert, DbType="Decimal(6,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal intLoginDetailsId
		{
			get
			{
				return this._intLoginDetailsId;
			}
			set
			{
				if ((this._intLoginDetailsId != value))
				{
					this.OnintLoginDetailsIdChanging(value);
					this.SendPropertyChanging();
					this._intLoginDetailsId = value;
					this.SendPropertyChanged("intLoginDetailsId");
					this.OnintLoginDetailsIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dtDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> dtDate
		{
			get
			{
				return this._dtDate;
			}
			set
			{
				if ((this._dtDate != value))
				{
					this.OndtDateChanging(value);
					this.SendPropertyChanging();
					this._dtDate = value;
					this.SendPropertyChanged("dtDate");
					this.OndtDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_varIPNo", DbType="VarChar(17)")]
		public string varIPNo
		{
			get
			{
				return this._varIPNo;
			}
			set
			{
				if ((this._varIPNo != value))
				{
					this.OnvarIPNoChanging(value);
					this.SendPropertyChanging();
					this._varIPNo = value;
					this.SendPropertyChanged("varIPNo");
					this.OnvarIPNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intId", DbType="Decimal(6,0)")]
		public System.Nullable<decimal> intId
		{
			get
			{
				return this._intId;
			}
			set
			{
				if ((this._intId != value))
				{
					this.OnintIdChanging(value);
					this.SendPropertyChanging();
					this._intId = value;
					this.SendPropertyChanged("intId");
					this.OnintIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_varType", DbType="VarChar(2)")]
		public string varType
		{
			get
			{
				return this._varType;
			}
			set
			{
				if ((this._varType != value))
				{
					this.OnvarTypeChanging(value);
					this.SendPropertyChanging();
					this._varType = value;
					this.SendPropertyChanged("varType");
					this.OnvarTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ctblState")]
	public partial class ctblState : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _intStateId;
		
		private decimal _intCountryId;
		
		private string _varStateName;
		
		private EntitySet<ctblDistrict> _ctblDistricts;
		
		private EntityRef<mtblCountry> _mtblCountry;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnintStateIdChanging(decimal value);
    partial void OnintStateIdChanged();
    partial void OnintCountryIdChanging(decimal value);
    partial void OnintCountryIdChanged();
    partial void OnvarStateNameChanging(string value);
    partial void OnvarStateNameChanged();
    #endregion
		
		public ctblState()
		{
			this._ctblDistricts = new EntitySet<ctblDistrict>(new Action<ctblDistrict>(this.attach_ctblDistricts), new Action<ctblDistrict>(this.detach_ctblDistricts));
			this._mtblCountry = default(EntityRef<mtblCountry>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intStateId", AutoSync=AutoSync.OnInsert, DbType="Decimal(6,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal intStateId
		{
			get
			{
				return this._intStateId;
			}
			set
			{
				if ((this._intStateId != value))
				{
					this.OnintStateIdChanging(value);
					this.SendPropertyChanging();
					this._intStateId = value;
					this.SendPropertyChanged("intStateId");
					this.OnintStateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intCountryId", DbType="Decimal(6,0) NOT NULL")]
		public decimal intCountryId
		{
			get
			{
				return this._intCountryId;
			}
			set
			{
				if ((this._intCountryId != value))
				{
					if (this._mtblCountry.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnintCountryIdChanging(value);
					this.SendPropertyChanging();
					this._intCountryId = value;
					this.SendPropertyChanged("intCountryId");
					this.OnintCountryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_varStateName", DbType="VarChar(20)")]
		public string varStateName
		{
			get
			{
				return this._varStateName;
			}
			set
			{
				if ((this._varStateName != value))
				{
					this.OnvarStateNameChanging(value);
					this.SendPropertyChanging();
					this._varStateName = value;
					this.SendPropertyChanged("varStateName");
					this.OnvarStateNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ctblState_ctblDistrict", Storage="_ctblDistricts", ThisKey="intStateId", OtherKey="intStateId")]
		public EntitySet<ctblDistrict> ctblDistricts
		{
			get
			{
				return this._ctblDistricts;
			}
			set
			{
				this._ctblDistricts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mtblCountry_ctblState", Storage="_mtblCountry", ThisKey="intCountryId", OtherKey="intCountryId", IsForeignKey=true)]
		public mtblCountry mtblCountry
		{
			get
			{
				return this._mtblCountry.Entity;
			}
			set
			{
				mtblCountry previousValue = this._mtblCountry.Entity;
				if (((previousValue != value) 
							|| (this._mtblCountry.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mtblCountry.Entity = null;
						previousValue.ctblStates.Remove(this);
					}
					this._mtblCountry.Entity = value;
					if ((value != null))
					{
						value.ctblStates.Add(this);
						this._intCountryId = value.intCountryId;
					}
					else
					{
						this._intCountryId = default(decimal);
					}
					this.SendPropertyChanged("mtblCountry");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ctblDistricts(ctblDistrict entity)
		{
			this.SendPropertyChanging();
			entity.ctblState = this;
		}
		
		private void detach_ctblDistricts(ctblDistrict entity)
		{
			this.SendPropertyChanging();
			entity.ctblState = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mtblCountry")]
	public partial class mtblCountry : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _intCountryId;
		
		private string _varCountryName;
		
		private EntitySet<ctblState> _ctblStates;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnintCountryIdChanging(decimal value);
    partial void OnintCountryIdChanged();
    partial void OnvarCountryNameChanging(string value);
    partial void OnvarCountryNameChanged();
    #endregion
		
		public mtblCountry()
		{
			this._ctblStates = new EntitySet<ctblState>(new Action<ctblState>(this.attach_ctblStates), new Action<ctblState>(this.detach_ctblStates));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intCountryId", AutoSync=AutoSync.OnInsert, DbType="Decimal(6,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal intCountryId
		{
			get
			{
				return this._intCountryId;
			}
			set
			{
				if ((this._intCountryId != value))
				{
					this.OnintCountryIdChanging(value);
					this.SendPropertyChanging();
					this._intCountryId = value;
					this.SendPropertyChanged("intCountryId");
					this.OnintCountryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_varCountryName", DbType="VarChar(20)")]
		public string varCountryName
		{
			get
			{
				return this._varCountryName;
			}
			set
			{
				if ((this._varCountryName != value))
				{
					this.OnvarCountryNameChanging(value);
					this.SendPropertyChanging();
					this._varCountryName = value;
					this.SendPropertyChanged("varCountryName");
					this.OnvarCountryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mtblCountry_ctblState", Storage="_ctblStates", ThisKey="intCountryId", OtherKey="intCountryId")]
		public EntitySet<ctblState> ctblStates
		{
			get
			{
				return this._ctblStates;
			}
			set
			{
				this._ctblStates.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ctblStates(ctblState entity)
		{
			this.SendPropertyChanging();
			entity.mtblCountry = this;
		}
		
		private void detach_ctblStates(ctblState entity)
		{
			this.SendPropertyChanging();
			entity.mtblCountry = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mtblUser")]
	public partial class mtblUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _intUserId;
		
		private string _varUserName;
		
		private string _varPwd;
		
		private System.Nullable<decimal> _intUserRoleId;
		
		private System.Nullable<System.DateTime> _dtDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnintUserIdChanging(decimal value);
    partial void OnintUserIdChanged();
    partial void OnvarUserNameChanging(string value);
    partial void OnvarUserNameChanged();
    partial void OnvarPwdChanging(string value);
    partial void OnvarPwdChanged();
    partial void OnintUserRoleIdChanging(System.Nullable<decimal> value);
    partial void OnintUserRoleIdChanged();
    partial void OndtDateChanging(System.Nullable<System.DateTime> value);
    partial void OndtDateChanged();
    #endregion
		
		public mtblUser()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intUserId", AutoSync=AutoSync.OnInsert, DbType="Decimal(6,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal intUserId
		{
			get
			{
				return this._intUserId;
			}
			set
			{
				if ((this._intUserId != value))
				{
					this.OnintUserIdChanging(value);
					this.SendPropertyChanging();
					this._intUserId = value;
					this.SendPropertyChanged("intUserId");
					this.OnintUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_varUserName", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string varUserName
		{
			get
			{
				return this._varUserName;
			}
			set
			{
				if ((this._varUserName != value))
				{
					this.OnvarUserNameChanging(value);
					this.SendPropertyChanging();
					this._varUserName = value;
					this.SendPropertyChanged("varUserName");
					this.OnvarUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_varPwd", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string varPwd
		{
			get
			{
				return this._varPwd;
			}
			set
			{
				if ((this._varPwd != value))
				{
					this.OnvarPwdChanging(value);
					this.SendPropertyChanging();
					this._varPwd = value;
					this.SendPropertyChanged("varPwd");
					this.OnvarPwdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intUserRoleId", DbType="Decimal(6,0)")]
		public System.Nullable<decimal> intUserRoleId
		{
			get
			{
				return this._intUserRoleId;
			}
			set
			{
				if ((this._intUserRoleId != value))
				{
					this.OnintUserRoleIdChanging(value);
					this.SendPropertyChanging();
					this._intUserRoleId = value;
					this.SendPropertyChanged("intUserRoleId");
					this.OnintUserRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dtDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> dtDate
		{
			get
			{
				return this._dtDate;
			}
			set
			{
				if ((this._dtDate != value))
				{
					this.OndtDateChanging(value);
					this.SendPropertyChanging();
					this._dtDate = value;
					this.SendPropertyChanged("dtDate");
					this.OndtDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mtblAccYear")]
	public partial class mtblAccYear : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _intAccYear;
		
		private string _varAccYear;
		
		private System.Nullable<System.DateTime> _dtBeginDate;
		
		private System.Nullable<System.DateTime> _dtEndDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnintAccYearChanging(decimal value);
    partial void OnintAccYearChanged();
    partial void OnvarAccYearChanging(string value);
    partial void OnvarAccYearChanged();
    partial void OndtBeginDateChanging(System.Nullable<System.DateTime> value);
    partial void OndtBeginDateChanged();
    partial void OndtEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OndtEndDateChanged();
    #endregion
		
		public mtblAccYear()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intAccYear", AutoSync=AutoSync.OnInsert, DbType="Decimal(6,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal intAccYear
		{
			get
			{
				return this._intAccYear;
			}
			set
			{
				if ((this._intAccYear != value))
				{
					this.OnintAccYearChanging(value);
					this.SendPropertyChanging();
					this._intAccYear = value;
					this.SendPropertyChanged("intAccYear");
					this.OnintAccYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_varAccYear", DbType="VarChar(15)")]
		public string varAccYear
		{
			get
			{
				return this._varAccYear;
			}
			set
			{
				if ((this._varAccYear != value))
				{
					this.OnvarAccYearChanging(value);
					this.SendPropertyChanging();
					this._varAccYear = value;
					this.SendPropertyChanged("varAccYear");
					this.OnvarAccYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dtBeginDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> dtBeginDate
		{
			get
			{
				return this._dtBeginDate;
			}
			set
			{
				if ((this._dtBeginDate != value))
				{
					this.OndtBeginDateChanging(value);
					this.SendPropertyChanging();
					this._dtBeginDate = value;
					this.SendPropertyChanged("dtBeginDate");
					this.OndtBeginDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dtEndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> dtEndDate
		{
			get
			{
				return this._dtEndDate;
			}
			set
			{
				if ((this._dtEndDate != value))
				{
					this.OndtEndDateChanging(value);
					this.SendPropertyChanging();
					this._dtEndDate = value;
					this.SendPropertyChanged("dtEndDate");
					this.OndtEndDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mtblCategory")]
	public partial class mtblCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _intCategoryId;
		
		private string _varCategory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnintCategoryIdChanging(decimal value);
    partial void OnintCategoryIdChanged();
    partial void OnvarCategoryChanging(string value);
    partial void OnvarCategoryChanged();
    #endregion
		
		public mtblCategory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intCategoryId", AutoSync=AutoSync.OnInsert, DbType="Decimal(6,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal intCategoryId
		{
			get
			{
				return this._intCategoryId;
			}
			set
			{
				if ((this._intCategoryId != value))
				{
					this.OnintCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._intCategoryId = value;
					this.SendPropertyChanged("intCategoryId");
					this.OnintCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_varCategory", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string varCategory
		{
			get
			{
				return this._varCategory;
			}
			set
			{
				if ((this._varCategory != value))
				{
					this.OnvarCategoryChanging(value);
					this.SendPropertyChanging();
					this._varCategory = value;
					this.SendPropertyChanged("varCategory");
					this.OnvarCategoryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mtblDepartment")]
	public partial class mtblDepartment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _intDepartmentId;
		
		private string _varDepartment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnintDepartmentIdChanging(decimal value);
    partial void OnintDepartmentIdChanged();
    partial void OnvarDepartmentChanging(string value);
    partial void OnvarDepartmentChanged();
    #endregion
		
		public mtblDepartment()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intDepartmentId", AutoSync=AutoSync.OnInsert, DbType="Decimal(6,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal intDepartmentId
		{
			get
			{
				return this._intDepartmentId;
			}
			set
			{
				if ((this._intDepartmentId != value))
				{
					this.OnintDepartmentIdChanging(value);
					this.SendPropertyChanging();
					this._intDepartmentId = value;
					this.SendPropertyChanged("intDepartmentId");
					this.OnintDepartmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_varDepartment", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string varDepartment
		{
			get
			{
				return this._varDepartment;
			}
			set
			{
				if ((this._varDepartment != value))
				{
					this.OnvarDepartmentChanging(value);
					this.SendPropertyChanging();
					this._varDepartment = value;
					this.SendPropertyChanged("varDepartment");
					this.OnvarDepartmentChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mtblDesignation")]
	public partial class mtblDesignation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _intDesignationId;
		
		private string _varDesignation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnintDesignationIdChanging(decimal value);
    partial void OnintDesignationIdChanged();
    partial void OnvarDesignationChanging(string value);
    partial void OnvarDesignationChanged();
    #endregion
		
		public mtblDesignation()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intDesignationId", AutoSync=AutoSync.OnInsert, DbType="Decimal(6,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal intDesignationId
		{
			get
			{
				return this._intDesignationId;
			}
			set
			{
				if ((this._intDesignationId != value))
				{
					this.OnintDesignationIdChanging(value);
					this.SendPropertyChanging();
					this._intDesignationId = value;
					this.SendPropertyChanged("intDesignationId");
					this.OnintDesignationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_varDesignation", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string varDesignation
		{
			get
			{
				return this._varDesignation;
			}
			set
			{
				if ((this._varDesignation != value))
				{
					this.OnvarDesignationChanging(value);
					this.SendPropertyChanging();
					this._varDesignation = value;
					this.SendPropertyChanged("varDesignation");
					this.OnvarDesignationChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ctblCompEsiDetail")]
	public partial class ctblCompEsiDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _intEsiDetailId;
		
		private decimal _intCompanyId;
		
		private string _varCompanyESINo;
		
		private EntityRef<mtblCompany> _mtblCompany;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnintEsiDetailIdChanging(decimal value);
    partial void OnintEsiDetailIdChanged();
    partial void OnintCompanyIdChanging(decimal value);
    partial void OnintCompanyIdChanged();
    partial void OnvarCompanyESINoChanging(string value);
    partial void OnvarCompanyESINoChanged();
    #endregion
		
		public ctblCompEsiDetail()
		{
			this._mtblCompany = default(EntityRef<mtblCompany>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intEsiDetailId", AutoSync=AutoSync.OnInsert, DbType="Decimal(6,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal intEsiDetailId
		{
			get
			{
				return this._intEsiDetailId;
			}
			set
			{
				if ((this._intEsiDetailId != value))
				{
					this.OnintEsiDetailIdChanging(value);
					this.SendPropertyChanging();
					this._intEsiDetailId = value;
					this.SendPropertyChanged("intEsiDetailId");
					this.OnintEsiDetailIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intCompanyId", DbType="Decimal(6,0) NOT NULL")]
		public decimal intCompanyId
		{
			get
			{
				return this._intCompanyId;
			}
			set
			{
				if ((this._intCompanyId != value))
				{
					if (this._mtblCompany.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnintCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._intCompanyId = value;
					this.SendPropertyChanged("intCompanyId");
					this.OnintCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_varCompanyESINo", DbType="VarChar(20)")]
		public string varCompanyESINo
		{
			get
			{
				return this._varCompanyESINo;
			}
			set
			{
				if ((this._varCompanyESINo != value))
				{
					this.OnvarCompanyESINoChanging(value);
					this.SendPropertyChanging();
					this._varCompanyESINo = value;
					this.SendPropertyChanged("varCompanyESINo");
					this.OnvarCompanyESINoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mtblCompany_ctblCompEsiDetail", Storage="_mtblCompany", ThisKey="intCompanyId", OtherKey="intCompanyId", IsForeignKey=true)]
		public mtblCompany mtblCompany
		{
			get
			{
				return this._mtblCompany.Entity;
			}
			set
			{
				mtblCompany previousValue = this._mtblCompany.Entity;
				if (((previousValue != value) 
							|| (this._mtblCompany.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mtblCompany.Entity = null;
						previousValue.ctblCompEsiDetails.Remove(this);
					}
					this._mtblCompany.Entity = value;
					if ((value != null))
					{
						value.ctblCompEsiDetails.Add(this);
						this._intCompanyId = value.intCompanyId;
					}
					else
					{
						this._intCompanyId = default(decimal);
					}
					this.SendPropertyChanged("mtblCompany");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mtblCompany")]
	public partial class mtblCompany : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _intCompanyId;
		
		private string _varCompTitle;
		
		private string _varCompanyName;
		
		private System.Nullable<decimal> _intCountryId;
		
		private System.Nullable<decimal> _intStateId;
		
		private System.Nullable<decimal> _intDistrictId;
		
		private string _varCity;
		
		private string _varAdd;
		
		private System.Nullable<decimal> _intPincode;
		
		private string _varMobile;
		
		private string _varPhone;
		
		private string _varEmail;
		
		private string _varBankAccNo;
		
		private string _varBankCode;
		
		private string _varBankName;
		
		private string _varBankCity;
		
		private string _varPFNo;
		
		private string _varESINo;
		
		private System.Nullable<decimal> _intCompEsiPer;
		
		private System.Nullable<decimal> _intEmpEsiPer;
		
		private System.Nullable<decimal> _intPfLimit;
		
		private System.Nullable<decimal> _intEsiLimit;
		
		private System.Nullable<decimal> _intEsiDailyWage;
		
		private EntitySet<ctblCompEsiDetail> _ctblCompEsiDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnintCompanyIdChanging(decimal value);
    partial void OnintCompanyIdChanged();
    partial void OnvarCompTitleChanging(string value);
    partial void OnvarCompTitleChanged();
    partial void OnvarCompanyNameChanging(string value);
    partial void OnvarCompanyNameChanged();
    partial void OnintCountryIdChanging(System.Nullable<decimal> value);
    partial void OnintCountryIdChanged();
    partial void OnintStateIdChanging(System.Nullable<decimal> value);
    partial void OnintStateIdChanged();
    partial void OnintDistrictIdChanging(System.Nullable<decimal> value);
    partial void OnintDistrictIdChanged();
    partial void OnvarCityChanging(string value);
    partial void OnvarCityChanged();
    partial void OnvarAddChanging(string value);
    partial void OnvarAddChanged();
    partial void OnintPincodeChanging(System.Nullable<decimal> value);
    partial void OnintPincodeChanged();
    partial void OnvarMobileChanging(string value);
    partial void OnvarMobileChanged();
    partial void OnvarPhoneChanging(string value);
    partial void OnvarPhoneChanged();
    partial void OnvarEmailChanging(string value);
    partial void OnvarEmailChanged();
    partial void OnvarBankAccNoChanging(string value);
    partial void OnvarBankAccNoChanged();
    partial void OnvarBankCodeChanging(string value);
    partial void OnvarBankCodeChanged();
    partial void OnvarBankNameChanging(string value);
    partial void OnvarBankNameChanged();
    partial void OnvarBankCityChanging(string value);
    partial void OnvarBankCityChanged();
    partial void OnvarPFNoChanging(string value);
    partial void OnvarPFNoChanged();
    partial void OnvarESINoChanging(string value);
    partial void OnvarESINoChanged();
    partial void OnintCompEsiPerChanging(System.Nullable<decimal> value);
    partial void OnintCompEsiPerChanged();
    partial void OnintEmpEsiPerChanging(System.Nullable<decimal> value);
    partial void OnintEmpEsiPerChanged();
    partial void OnintPfLimitChanging(System.Nullable<decimal> value);
    partial void OnintPfLimitChanged();
    partial void OnintEsiLimitChanging(System.Nullable<decimal> value);
    partial void OnintEsiLimitChanged();
    partial void OnintEsiDailyWageChanging(System.Nullable<decimal> value);
    partial void OnintEsiDailyWageChanged();
    #endregion
		
		public mtblCompany()
		{
			this._ctblCompEsiDetails = new EntitySet<ctblCompEsiDetail>(new Action<ctblCompEsiDetail>(this.attach_ctblCompEsiDetails), new Action<ctblCompEsiDetail>(this.detach_ctblCompEsiDetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intCompanyId", AutoSync=AutoSync.OnInsert, DbType="Decimal(6,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal intCompanyId
		{
			get
			{
				return this._intCompanyId;
			}
			set
			{
				if ((this._intCompanyId != value))
				{
					this.OnintCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._intCompanyId = value;
					this.SendPropertyChanged("intCompanyId");
					this.OnintCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_varCompTitle", DbType="VarChar(20)")]
		public string varCompTitle
		{
			get
			{
				return this._varCompTitle;
			}
			set
			{
				if ((this._varCompTitle != value))
				{
					this.OnvarCompTitleChanging(value);
					this.SendPropertyChanging();
					this._varCompTitle = value;
					this.SendPropertyChanged("varCompTitle");
					this.OnvarCompTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_varCompanyName", DbType="VarChar(30)")]
		public string varCompanyName
		{
			get
			{
				return this._varCompanyName;
			}
			set
			{
				if ((this._varCompanyName != value))
				{
					this.OnvarCompanyNameChanging(value);
					this.SendPropertyChanging();
					this._varCompanyName = value;
					this.SendPropertyChanged("varCompanyName");
					this.OnvarCompanyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intCountryId", DbType="Decimal(6,0)")]
		public System.Nullable<decimal> intCountryId
		{
			get
			{
				return this._intCountryId;
			}
			set
			{
				if ((this._intCountryId != value))
				{
					this.OnintCountryIdChanging(value);
					this.SendPropertyChanging();
					this._intCountryId = value;
					this.SendPropertyChanged("intCountryId");
					this.OnintCountryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intStateId", DbType="Decimal(6,0)")]
		public System.Nullable<decimal> intStateId
		{
			get
			{
				return this._intStateId;
			}
			set
			{
				if ((this._intStateId != value))
				{
					this.OnintStateIdChanging(value);
					this.SendPropertyChanging();
					this._intStateId = value;
					this.SendPropertyChanged("intStateId");
					this.OnintStateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intDistrictId", DbType="Decimal(6,0)")]
		public System.Nullable<decimal> intDistrictId
		{
			get
			{
				return this._intDistrictId;
			}
			set
			{
				if ((this._intDistrictId != value))
				{
					this.OnintDistrictIdChanging(value);
					this.SendPropertyChanging();
					this._intDistrictId = value;
					this.SendPropertyChanged("intDistrictId");
					this.OnintDistrictIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_varCity", DbType="VarChar(15)")]
		public string varCity
		{
			get
			{
				return this._varCity;
			}
			set
			{
				if ((this._varCity != value))
				{
					this.OnvarCityChanging(value);
					this.SendPropertyChanging();
					this._varCity = value;
					this.SendPropertyChanged("varCity");
					this.OnvarCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_varAdd", DbType="VarChar(30)")]
		public string varAdd
		{
			get
			{
				return this._varAdd;
			}
			set
			{
				if ((this._varAdd != value))
				{
					this.OnvarAddChanging(value);
					this.SendPropertyChanging();
					this._varAdd = value;
					this.SendPropertyChanged("varAdd");
					this.OnvarAddChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intPincode", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> intPincode
		{
			get
			{
				return this._intPincode;
			}
			set
			{
				if ((this._intPincode != value))
				{
					this.OnintPincodeChanging(value);
					this.SendPropertyChanging();
					this._intPincode = value;
					this.SendPropertyChanged("intPincode");
					this.OnintPincodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_varMobile", DbType="VarChar(20)")]
		public string varMobile
		{
			get
			{
				return this._varMobile;
			}
			set
			{
				if ((this._varMobile != value))
				{
					this.OnvarMobileChanging(value);
					this.SendPropertyChanging();
					this._varMobile = value;
					this.SendPropertyChanged("varMobile");
					this.OnvarMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_varPhone", DbType="VarChar(20)")]
		public string varPhone
		{
			get
			{
				return this._varPhone;
			}
			set
			{
				if ((this._varPhone != value))
				{
					this.OnvarPhoneChanging(value);
					this.SendPropertyChanging();
					this._varPhone = value;
					this.SendPropertyChanged("varPhone");
					this.OnvarPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_varEmail", DbType="VarChar(30)")]
		public string varEmail
		{
			get
			{
				return this._varEmail;
			}
			set
			{
				if ((this._varEmail != value))
				{
					this.OnvarEmailChanging(value);
					this.SendPropertyChanging();
					this._varEmail = value;
					this.SendPropertyChanged("varEmail");
					this.OnvarEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_varBankAccNo", DbType="VarChar(30)")]
		public string varBankAccNo
		{
			get
			{
				return this._varBankAccNo;
			}
			set
			{
				if ((this._varBankAccNo != value))
				{
					this.OnvarBankAccNoChanging(value);
					this.SendPropertyChanging();
					this._varBankAccNo = value;
					this.SendPropertyChanged("varBankAccNo");
					this.OnvarBankAccNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_varBankCode", DbType="VarChar(10)")]
		public string varBankCode
		{
			get
			{
				return this._varBankCode;
			}
			set
			{
				if ((this._varBankCode != value))
				{
					this.OnvarBankCodeChanging(value);
					this.SendPropertyChanging();
					this._varBankCode = value;
					this.SendPropertyChanged("varBankCode");
					this.OnvarBankCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_varBankName", DbType="VarChar(30)")]
		public string varBankName
		{
			get
			{
				return this._varBankName;
			}
			set
			{
				if ((this._varBankName != value))
				{
					this.OnvarBankNameChanging(value);
					this.SendPropertyChanging();
					this._varBankName = value;
					this.SendPropertyChanged("varBankName");
					this.OnvarBankNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_varBankCity", DbType="VarChar(20)")]
		public string varBankCity
		{
			get
			{
				return this._varBankCity;
			}
			set
			{
				if ((this._varBankCity != value))
				{
					this.OnvarBankCityChanging(value);
					this.SendPropertyChanging();
					this._varBankCity = value;
					this.SendPropertyChanged("varBankCity");
					this.OnvarBankCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_varPFNo", DbType="VarChar(20)")]
		public string varPFNo
		{
			get
			{
				return this._varPFNo;
			}
			set
			{
				if ((this._varPFNo != value))
				{
					this.OnvarPFNoChanging(value);
					this.SendPropertyChanging();
					this._varPFNo = value;
					this.SendPropertyChanged("varPFNo");
					this.OnvarPFNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_varESINo", DbType="VarChar(20)")]
		public string varESINo
		{
			get
			{
				return this._varESINo;
			}
			set
			{
				if ((this._varESINo != value))
				{
					this.OnvarESINoChanging(value);
					this.SendPropertyChanging();
					this._varESINo = value;
					this.SendPropertyChanged("varESINo");
					this.OnvarESINoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intCompEsiPer", DbType="Decimal(20,0)")]
		public System.Nullable<decimal> intCompEsiPer
		{
			get
			{
				return this._intCompEsiPer;
			}
			set
			{
				if ((this._intCompEsiPer != value))
				{
					this.OnintCompEsiPerChanging(value);
					this.SendPropertyChanging();
					this._intCompEsiPer = value;
					this.SendPropertyChanged("intCompEsiPer");
					this.OnintCompEsiPerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intEmpEsiPer", DbType="Decimal(20,0)")]
		public System.Nullable<decimal> intEmpEsiPer
		{
			get
			{
				return this._intEmpEsiPer;
			}
			set
			{
				if ((this._intEmpEsiPer != value))
				{
					this.OnintEmpEsiPerChanging(value);
					this.SendPropertyChanging();
					this._intEmpEsiPer = value;
					this.SendPropertyChanged("intEmpEsiPer");
					this.OnintEmpEsiPerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intPfLimit", DbType="Decimal(20,0)")]
		public System.Nullable<decimal> intPfLimit
		{
			get
			{
				return this._intPfLimit;
			}
			set
			{
				if ((this._intPfLimit != value))
				{
					this.OnintPfLimitChanging(value);
					this.SendPropertyChanging();
					this._intPfLimit = value;
					this.SendPropertyChanged("intPfLimit");
					this.OnintPfLimitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intEsiLimit", DbType="Decimal(20,0)")]
		public System.Nullable<decimal> intEsiLimit
		{
			get
			{
				return this._intEsiLimit;
			}
			set
			{
				if ((this._intEsiLimit != value))
				{
					this.OnintEsiLimitChanging(value);
					this.SendPropertyChanging();
					this._intEsiLimit = value;
					this.SendPropertyChanged("intEsiLimit");
					this.OnintEsiLimitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intEsiDailyWage", DbType="Decimal(20,0)")]
		public System.Nullable<decimal> intEsiDailyWage
		{
			get
			{
				return this._intEsiDailyWage;
			}
			set
			{
				if ((this._intEsiDailyWage != value))
				{
					this.OnintEsiDailyWageChanging(value);
					this.SendPropertyChanging();
					this._intEsiDailyWage = value;
					this.SendPropertyChanged("intEsiDailyWage");
					this.OnintEsiDailyWageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mtblCompany_ctblCompEsiDetail", Storage="_ctblCompEsiDetails", ThisKey="intCompanyId", OtherKey="intCompanyId")]
		public EntitySet<ctblCompEsiDetail> ctblCompEsiDetails
		{
			get
			{
				return this._ctblCompEsiDetails;
			}
			set
			{
				this._ctblCompEsiDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ctblCompEsiDetails(ctblCompEsiDetail entity)
		{
			this.SendPropertyChanging();
			entity.mtblCompany = this;
		}
		
		private void detach_ctblCompEsiDetails(ctblCompEsiDetail entity)
		{
			this.SendPropertyChanging();
			entity.mtblCompany = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mtblEmployee")]
	public partial class mtblEmployee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _intEmpId;
		
		private string _varEmpId;
		
		private string _varPwd;
		
		private System.Nullable<decimal> _intCompanyId;
		
		private string _varCompanyESINo;
		
		private System.Nullable<decimal> _intEmpType;
		
		private string _varTitle;
		
		private string _varInitial;
		
		private string _varEmpName;
		
		private string _varSex;
		
		private string _varBloodGroup;
		
		private string _varFHName;
		
		private string _varGuardian;
		
		private string _varEducation;
		
		private string _varReligion;
		
		private string _varCommunity;
		
		private string _varMarital;
		
		private string _varImage;
		
		private string _varPdf;
		
		private System.Nullable<decimal> _intCountryId;
		
		private System.Nullable<decimal> _intStateId;
		
		private System.Nullable<decimal> _intDistrictId;
		
		private string _varCity;
		
		private string _varAdd;
		
		private System.Nullable<decimal> _intPincode;
		
		private string _varMobile;
		
		private string _varEmail;
		
		private System.Nullable<System.DateTime> _dtDOB;
		
		private System.Nullable<System.DateTime> _dtDOJ;
		
		private string _varDisability;
		
		private string _varPFNo;
		
		private string _varESINo;
		
		private string _varDispensaryName;
		
		private string _varDispensaryCity;
		
		private System.Nullable<decimal> _intCategoryId;
		
		private System.Nullable<decimal> _intDepartmentId;
		
		private System.Nullable<decimal> _intDesignationId;
		
		private string _varBankAccNo;
		
		private string _varBankCode;
		
		private string _varBankName;
		
		private string _varBankCity;
		
		private System.Nullable<decimal> _intSalaryMode;
		
		private System.Nullable<decimal> _intSalaryType;
		
		private System.Nullable<decimal> _intSalary;
		
		private System.Nullable<decimal> _intHra;
		
		private System.Nullable<decimal> _intDa;
		
		private System.Nullable<decimal> _intWa;
		
		private System.Nullable<decimal> _intTa;
		
		private System.Nullable<decimal> _intOa;
		
		private System.Nullable<decimal> _intOtPerHour;
		
		private System.Nullable<decimal> _intGrossPay;
		
		private System.Nullable<System.DateTime> _dtResignDate;
		
		private string _varResignReason;
		
		private System.Nullable<System.DateTime> _dtRejoinDate;
		
		private System.Nullable<decimal> _intUserId;
		
		private System.Nullable<System.DateTime> _dtDate;
		
		private System.Nullable<bool> _bitApprove;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnintEmpIdChanging(decimal value);
    partial void OnintEmpIdChanged();
    partial void OnvarEmpIdChanging(string value);
    partial void OnvarEmpIdChanged();
    partial void OnvarPwdChanging(string value);
    partial void OnvarPwdChanged();
    partial void OnintCompanyIdChanging(System.Nullable<decimal> value);
    partial void OnintCompanyIdChanged();
    partial void OnvarCompanyESINoChanging(string value);
    partial void OnvarCompanyESINoChanged();
    partial void OnintEmpTypeChanging(System.Nullable<decimal> value);
    partial void OnintEmpTypeChanged();
    partial void OnvarTitleChanging(string value);
    partial void OnvarTitleChanged();
    partial void OnvarInitialChanging(string value);
    partial void OnvarInitialChanged();
    partial void OnvarEmpNameChanging(string value);
    partial void OnvarEmpNameChanged();
    partial void OnvarSexChanging(string value);
    partial void OnvarSexChanged();
    partial void OnvarBloodGroupChanging(string value);
    partial void OnvarBloodGroupChanged();
    partial void OnvarFHNameChanging(string value);
    partial void OnvarFHNameChanged();
    partial void OnvarGuardianChanging(string value);
    partial void OnvarGuardianChanged();
    partial void OnvarEducationChanging(string value);
    partial void OnvarEducationChanged();
    partial void OnvarReligionChanging(string value);
    partial void OnvarReligionChanged();
    partial void OnvarCommunityChanging(string value);
    partial void OnvarCommunityChanged();
    partial void OnvarMaritalChanging(string value);
    partial void OnvarMaritalChanged();
    partial void OnvarImageChanging(string value);
    partial void OnvarImageChanged();
    partial void OnvarPdfChanging(string value);
    partial void OnvarPdfChanged();
    partial void OnintCountryIdChanging(System.Nullable<decimal> value);
    partial void OnintCountryIdChanged();
    partial void OnintStateIdChanging(System.Nullable<decimal> value);
    partial void OnintStateIdChanged();
    partial void OnintDistrictIdChanging(System.Nullable<decimal> value);
    partial void OnintDistrictIdChanged();
    partial void OnvarCityChanging(string value);
    partial void OnvarCityChanged();
    partial void OnvarAddChanging(string value);
    partial void OnvarAddChanged();
    partial void OnintPincodeChanging(System.Nullable<decimal> value);
    partial void OnintPincodeChanged();
    partial void OnvarMobileChanging(string value);
    partial void OnvarMobileChanged();
    partial void OnvarEmailChanging(string value);
    partial void OnvarEmailChanged();
    partial void OndtDOBChanging(System.Nullable<System.DateTime> value);
    partial void OndtDOBChanged();
    partial void OndtDOJChanging(System.Nullable<System.DateTime> value);
    partial void OndtDOJChanged();
    partial void OnvarDisabilityChanging(string value);
    partial void OnvarDisabilityChanged();
    partial void OnvarPFNoChanging(string value);
    partial void OnvarPFNoChanged();
    partial void OnvarESINoChanging(string value);
    partial void OnvarESINoChanged();
    partial void OnvarDispensaryNameChanging(string value);
    partial void OnvarDispensaryNameChanged();
    partial void OnvarDispensaryCityChanging(string value);
    partial void OnvarDispensaryCityChanged();
    partial void OnintCategoryIdChanging(System.Nullable<decimal> value);
    partial void OnintCategoryIdChanged();
    partial void OnintDepartmentIdChanging(System.Nullable<decimal> value);
    partial void OnintDepartmentIdChanged();
    partial void OnintDesignationIdChanging(System.Nullable<decimal> value);
    partial void OnintDesignationIdChanged();
    partial void OnvarBankAccNoChanging(string value);
    partial void OnvarBankAccNoChanged();
    partial void OnvarBankCodeChanging(string value);
    partial void OnvarBankCodeChanged();
    partial void OnvarBankNameChanging(string value);
    partial void OnvarBankNameChanged();
    partial void OnvarBankCityChanging(string value);
    partial void OnvarBankCityChanged();
    partial void OnintSalaryModeChanging(System.Nullable<decimal> value);
    partial void OnintSalaryModeChanged();
    partial void OnintSalaryTypeChanging(System.Nullable<decimal> value);
    partial void OnintSalaryTypeChanged();
    partial void OnintSalaryChanging(System.Nullable<decimal> value);
    partial void OnintSalaryChanged();
    partial void OnintHraChanging(System.Nullable<decimal> value);
    partial void OnintHraChanged();
    partial void OnintDaChanging(System.Nullable<decimal> value);
    partial void OnintDaChanged();
    partial void OnintWaChanging(System.Nullable<decimal> value);
    partial void OnintWaChanged();
    partial void OnintTaChanging(System.Nullable<decimal> value);
    partial void OnintTaChanged();
    partial void OnintOaChanging(System.Nullable<decimal> value);
    partial void OnintOaChanged();
    partial void OnintOtPerHourChanging(System.Nullable<decimal> value);
    partial void OnintOtPerHourChanged();
    partial void OnintGrossPayChanging(System.Nullable<decimal> value);
    partial void OnintGrossPayChanged();
    partial void OndtResignDateChanging(System.Nullable<System.DateTime> value);
    partial void OndtResignDateChanged();
    partial void OnvarResignReasonChanging(string value);
    partial void OnvarResignReasonChanged();
    partial void OndtRejoinDateChanging(System.Nullable<System.DateTime> value);
    partial void OndtRejoinDateChanged();
    partial void OnintUserIdChanging(System.Nullable<decimal> value);
    partial void OnintUserIdChanged();
    partial void OndtDateChanging(System.Nullable<System.DateTime> value);
    partial void OndtDateChanged();
    partial void OnbitApproveChanging(System.Nullable<bool> value);
    partial void OnbitApproveChanged();
    #endregion
		
		public mtblEmployee()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intEmpId", AutoSync=AutoSync.OnInsert, DbType="Decimal(6,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal intEmpId
		{
			get
			{
				return this._intEmpId;
			}
			set
			{
				if ((this._intEmpId != value))
				{
					this.OnintEmpIdChanging(value);
					this.SendPropertyChanging();
					this._intEmpId = value;
					this.SendPropertyChanged("intEmpId");
					this.OnintEmpIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_varEmpId", DbType="VarChar(20)")]
		public string varEmpId
		{
			get
			{
				return this._varEmpId;
			}
			set
			{
				if ((this._varEmpId != value))
				{
					this.OnvarEmpIdChanging(value);
					this.SendPropertyChanging();
					this._varEmpId = value;
					this.SendPropertyChanged("varEmpId");
					this.OnvarEmpIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_varPwd", DbType="VarChar(20)")]
		public string varPwd
		{
			get
			{
				return this._varPwd;
			}
			set
			{
				if ((this._varPwd != value))
				{
					this.OnvarPwdChanging(value);
					this.SendPropertyChanging();
					this._varPwd = value;
					this.SendPropertyChanged("varPwd");
					this.OnvarPwdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intCompanyId", DbType="Decimal(6,0)")]
		public System.Nullable<decimal> intCompanyId
		{
			get
			{
				return this._intCompanyId;
			}
			set
			{
				if ((this._intCompanyId != value))
				{
					this.OnintCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._intCompanyId = value;
					this.SendPropertyChanged("intCompanyId");
					this.OnintCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_varCompanyESINo", DbType="VarChar(20)")]
		public string varCompanyESINo
		{
			get
			{
				return this._varCompanyESINo;
			}
			set
			{
				if ((this._varCompanyESINo != value))
				{
					this.OnvarCompanyESINoChanging(value);
					this.SendPropertyChanging();
					this._varCompanyESINo = value;
					this.SendPropertyChanged("varCompanyESINo");
					this.OnvarCompanyESINoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intEmpType", DbType="Decimal(6,0)")]
		public System.Nullable<decimal> intEmpType
		{
			get
			{
				return this._intEmpType;
			}
			set
			{
				if ((this._intEmpType != value))
				{
					this.OnintEmpTypeChanging(value);
					this.SendPropertyChanging();
					this._intEmpType = value;
					this.SendPropertyChanged("intEmpType");
					this.OnintEmpTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_varTitle", DbType="VarChar(5)")]
		public string varTitle
		{
			get
			{
				return this._varTitle;
			}
			set
			{
				if ((this._varTitle != value))
				{
					this.OnvarTitleChanging(value);
					this.SendPropertyChanging();
					this._varTitle = value;
					this.SendPropertyChanged("varTitle");
					this.OnvarTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_varInitial", DbType="VarChar(5)")]
		public string varInitial
		{
			get
			{
				return this._varInitial;
			}
			set
			{
				if ((this._varInitial != value))
				{
					this.OnvarInitialChanging(value);
					this.SendPropertyChanging();
					this._varInitial = value;
					this.SendPropertyChanged("varInitial");
					this.OnvarInitialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_varEmpName", DbType="VarChar(30)")]
		public string varEmpName
		{
			get
			{
				return this._varEmpName;
			}
			set
			{
				if ((this._varEmpName != value))
				{
					this.OnvarEmpNameChanging(value);
					this.SendPropertyChanging();
					this._varEmpName = value;
					this.SendPropertyChanged("varEmpName");
					this.OnvarEmpNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_varSex", DbType="VarChar(10)")]
		public string varSex
		{
			get
			{
				return this._varSex;
			}
			set
			{
				if ((this._varSex != value))
				{
					this.OnvarSexChanging(value);
					this.SendPropertyChanging();
					this._varSex = value;
					this.SendPropertyChanged("varSex");
					this.OnvarSexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_varBloodGroup", DbType="VarChar(5)")]
		public string varBloodGroup
		{
			get
			{
				return this._varBloodGroup;
			}
			set
			{
				if ((this._varBloodGroup != value))
				{
					this.OnvarBloodGroupChanging(value);
					this.SendPropertyChanging();
					this._varBloodGroup = value;
					this.SendPropertyChanged("varBloodGroup");
					this.OnvarBloodGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_varFHName", DbType="VarChar(30)")]
		public string varFHName
		{
			get
			{
				return this._varFHName;
			}
			set
			{
				if ((this._varFHName != value))
				{
					this.OnvarFHNameChanging(value);
					this.SendPropertyChanging();
					this._varFHName = value;
					this.SendPropertyChanged("varFHName");
					this.OnvarFHNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_varGuardian", DbType="VarChar(30)")]
		public string varGuardian
		{
			get
			{
				return this._varGuardian;
			}
			set
			{
				if ((this._varGuardian != value))
				{
					this.OnvarGuardianChanging(value);
					this.SendPropertyChanging();
					this._varGuardian = value;
					this.SendPropertyChanged("varGuardian");
					this.OnvarGuardianChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_varEducation", DbType="VarChar(30)")]
		public string varEducation
		{
			get
			{
				return this._varEducation;
			}
			set
			{
				if ((this._varEducation != value))
				{
					this.OnvarEducationChanging(value);
					this.SendPropertyChanging();
					this._varEducation = value;
					this.SendPropertyChanged("varEducation");
					this.OnvarEducationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_varReligion", DbType="VarChar(15)")]
		public string varReligion
		{
			get
			{
				return this._varReligion;
			}
			set
			{
				if ((this._varReligion != value))
				{
					this.OnvarReligionChanging(value);
					this.SendPropertyChanging();
					this._varReligion = value;
					this.SendPropertyChanged("varReligion");
					this.OnvarReligionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_varCommunity", DbType="VarChar(15)")]
		public string varCommunity
		{
			get
			{
				return this._varCommunity;
			}
			set
			{
				if ((this._varCommunity != value))
				{
					this.OnvarCommunityChanging(value);
					this.SendPropertyChanging();
					this._varCommunity = value;
					this.SendPropertyChanged("varCommunity");
					this.OnvarCommunityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_varMarital", DbType="VarChar(15)")]
		public string varMarital
		{
			get
			{
				return this._varMarital;
			}
			set
			{
				if ((this._varMarital != value))
				{
					this.OnvarMaritalChanging(value);
					this.SendPropertyChanging();
					this._varMarital = value;
					this.SendPropertyChanged("varMarital");
					this.OnvarMaritalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_varImage", DbType="VarChar(30)")]
		public string varImage
		{
			get
			{
				return this._varImage;
			}
			set
			{
				if ((this._varImage != value))
				{
					this.OnvarImageChanging(value);
					this.SendPropertyChanging();
					this._varImage = value;
					this.SendPropertyChanged("varImage");
					this.OnvarImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_varPdf", DbType="VarChar(30)")]
		public string varPdf
		{
			get
			{
				return this._varPdf;
			}
			set
			{
				if ((this._varPdf != value))
				{
					this.OnvarPdfChanging(value);
					this.SendPropertyChanging();
					this._varPdf = value;
					this.SendPropertyChanged("varPdf");
					this.OnvarPdfChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intCountryId", DbType="Decimal(6,0)")]
		public System.Nullable<decimal> intCountryId
		{
			get
			{
				return this._intCountryId;
			}
			set
			{
				if ((this._intCountryId != value))
				{
					this.OnintCountryIdChanging(value);
					this.SendPropertyChanging();
					this._intCountryId = value;
					this.SendPropertyChanged("intCountryId");
					this.OnintCountryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intStateId", DbType="Decimal(6,0)")]
		public System.Nullable<decimal> intStateId
		{
			get
			{
				return this._intStateId;
			}
			set
			{
				if ((this._intStateId != value))
				{
					this.OnintStateIdChanging(value);
					this.SendPropertyChanging();
					this._intStateId = value;
					this.SendPropertyChanged("intStateId");
					this.OnintStateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intDistrictId", DbType="Decimal(6,0)")]
		public System.Nullable<decimal> intDistrictId
		{
			get
			{
				return this._intDistrictId;
			}
			set
			{
				if ((this._intDistrictId != value))
				{
					this.OnintDistrictIdChanging(value);
					this.SendPropertyChanging();
					this._intDistrictId = value;
					this.SendPropertyChanged("intDistrictId");
					this.OnintDistrictIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_varCity", DbType="VarChar(15)")]
		public string varCity
		{
			get
			{
				return this._varCity;
			}
			set
			{
				if ((this._varCity != value))
				{
					this.OnvarCityChanging(value);
					this.SendPropertyChanging();
					this._varCity = value;
					this.SendPropertyChanged("varCity");
					this.OnvarCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_varAdd", DbType="VarChar(30)")]
		public string varAdd
		{
			get
			{
				return this._varAdd;
			}
			set
			{
				if ((this._varAdd != value))
				{
					this.OnvarAddChanging(value);
					this.SendPropertyChanging();
					this._varAdd = value;
					this.SendPropertyChanged("varAdd");
					this.OnvarAddChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intPincode", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> intPincode
		{
			get
			{
				return this._intPincode;
			}
			set
			{
				if ((this._intPincode != value))
				{
					this.OnintPincodeChanging(value);
					this.SendPropertyChanging();
					this._intPincode = value;
					this.SendPropertyChanged("intPincode");
					this.OnintPincodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_varMobile", DbType="VarChar(20)")]
		public string varMobile
		{
			get
			{
				return this._varMobile;
			}
			set
			{
				if ((this._varMobile != value))
				{
					this.OnvarMobileChanging(value);
					this.SendPropertyChanging();
					this._varMobile = value;
					this.SendPropertyChanged("varMobile");
					this.OnvarMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_varEmail", DbType="VarChar(30)")]
		public string varEmail
		{
			get
			{
				return this._varEmail;
			}
			set
			{
				if ((this._varEmail != value))
				{
					this.OnvarEmailChanging(value);
					this.SendPropertyChanging();
					this._varEmail = value;
					this.SendPropertyChanged("varEmail");
					this.OnvarEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dtDOB", DbType="DateTime")]
		public System.Nullable<System.DateTime> dtDOB
		{
			get
			{
				return this._dtDOB;
			}
			set
			{
				if ((this._dtDOB != value))
				{
					this.OndtDOBChanging(value);
					this.SendPropertyChanging();
					this._dtDOB = value;
					this.SendPropertyChanged("dtDOB");
					this.OndtDOBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dtDOJ", DbType="DateTime")]
		public System.Nullable<System.DateTime> dtDOJ
		{
			get
			{
				return this._dtDOJ;
			}
			set
			{
				if ((this._dtDOJ != value))
				{
					this.OndtDOJChanging(value);
					this.SendPropertyChanging();
					this._dtDOJ = value;
					this.SendPropertyChanged("dtDOJ");
					this.OndtDOJChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_varDisability", DbType="VarChar(20)")]
		public string varDisability
		{
			get
			{
				return this._varDisability;
			}
			set
			{
				if ((this._varDisability != value))
				{
					this.OnvarDisabilityChanging(value);
					this.SendPropertyChanging();
					this._varDisability = value;
					this.SendPropertyChanged("varDisability");
					this.OnvarDisabilityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_varPFNo", DbType="VarChar(20)")]
		public string varPFNo
		{
			get
			{
				return this._varPFNo;
			}
			set
			{
				if ((this._varPFNo != value))
				{
					this.OnvarPFNoChanging(value);
					this.SendPropertyChanging();
					this._varPFNo = value;
					this.SendPropertyChanged("varPFNo");
					this.OnvarPFNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_varESINo", DbType="VarChar(20)")]
		public string varESINo
		{
			get
			{
				return this._varESINo;
			}
			set
			{
				if ((this._varESINo != value))
				{
					this.OnvarESINoChanging(value);
					this.SendPropertyChanging();
					this._varESINo = value;
					this.SendPropertyChanged("varESINo");
					this.OnvarESINoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_varDispensaryName", DbType="VarChar(20)")]
		public string varDispensaryName
		{
			get
			{
				return this._varDispensaryName;
			}
			set
			{
				if ((this._varDispensaryName != value))
				{
					this.OnvarDispensaryNameChanging(value);
					this.SendPropertyChanging();
					this._varDispensaryName = value;
					this.SendPropertyChanged("varDispensaryName");
					this.OnvarDispensaryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_varDispensaryCity", DbType="VarChar(20)")]
		public string varDispensaryCity
		{
			get
			{
				return this._varDispensaryCity;
			}
			set
			{
				if ((this._varDispensaryCity != value))
				{
					this.OnvarDispensaryCityChanging(value);
					this.SendPropertyChanging();
					this._varDispensaryCity = value;
					this.SendPropertyChanged("varDispensaryCity");
					this.OnvarDispensaryCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intCategoryId", DbType="Decimal(6,0)")]
		public System.Nullable<decimal> intCategoryId
		{
			get
			{
				return this._intCategoryId;
			}
			set
			{
				if ((this._intCategoryId != value))
				{
					this.OnintCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._intCategoryId = value;
					this.SendPropertyChanged("intCategoryId");
					this.OnintCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intDepartmentId", DbType="Decimal(6,0)")]
		public System.Nullable<decimal> intDepartmentId
		{
			get
			{
				return this._intDepartmentId;
			}
			set
			{
				if ((this._intDepartmentId != value))
				{
					this.OnintDepartmentIdChanging(value);
					this.SendPropertyChanging();
					this._intDepartmentId = value;
					this.SendPropertyChanged("intDepartmentId");
					this.OnintDepartmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intDesignationId", DbType="Decimal(6,0)")]
		public System.Nullable<decimal> intDesignationId
		{
			get
			{
				return this._intDesignationId;
			}
			set
			{
				if ((this._intDesignationId != value))
				{
					this.OnintDesignationIdChanging(value);
					this.SendPropertyChanging();
					this._intDesignationId = value;
					this.SendPropertyChanged("intDesignationId");
					this.OnintDesignationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_varBankAccNo", DbType="VarChar(30)")]
		public string varBankAccNo
		{
			get
			{
				return this._varBankAccNo;
			}
			set
			{
				if ((this._varBankAccNo != value))
				{
					this.OnvarBankAccNoChanging(value);
					this.SendPropertyChanging();
					this._varBankAccNo = value;
					this.SendPropertyChanged("varBankAccNo");
					this.OnvarBankAccNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_varBankCode", DbType="VarChar(10)")]
		public string varBankCode
		{
			get
			{
				return this._varBankCode;
			}
			set
			{
				if ((this._varBankCode != value))
				{
					this.OnvarBankCodeChanging(value);
					this.SendPropertyChanging();
					this._varBankCode = value;
					this.SendPropertyChanged("varBankCode");
					this.OnvarBankCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_varBankName", DbType="VarChar(30)")]
		public string varBankName
		{
			get
			{
				return this._varBankName;
			}
			set
			{
				if ((this._varBankName != value))
				{
					this.OnvarBankNameChanging(value);
					this.SendPropertyChanging();
					this._varBankName = value;
					this.SendPropertyChanged("varBankName");
					this.OnvarBankNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_varBankCity", DbType="VarChar(20)")]
		public string varBankCity
		{
			get
			{
				return this._varBankCity;
			}
			set
			{
				if ((this._varBankCity != value))
				{
					this.OnvarBankCityChanging(value);
					this.SendPropertyChanging();
					this._varBankCity = value;
					this.SendPropertyChanged("varBankCity");
					this.OnvarBankCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intSalaryMode", DbType="Decimal(6,0)")]
		public System.Nullable<decimal> intSalaryMode
		{
			get
			{
				return this._intSalaryMode;
			}
			set
			{
				if ((this._intSalaryMode != value))
				{
					this.OnintSalaryModeChanging(value);
					this.SendPropertyChanging();
					this._intSalaryMode = value;
					this.SendPropertyChanged("intSalaryMode");
					this.OnintSalaryModeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intSalaryType", DbType="Decimal(6,0)")]
		public System.Nullable<decimal> intSalaryType
		{
			get
			{
				return this._intSalaryType;
			}
			set
			{
				if ((this._intSalaryType != value))
				{
					this.OnintSalaryTypeChanging(value);
					this.SendPropertyChanging();
					this._intSalaryType = value;
					this.SendPropertyChanged("intSalaryType");
					this.OnintSalaryTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intSalary", DbType="Decimal(20,0)")]
		public System.Nullable<decimal> intSalary
		{
			get
			{
				return this._intSalary;
			}
			set
			{
				if ((this._intSalary != value))
				{
					this.OnintSalaryChanging(value);
					this.SendPropertyChanging();
					this._intSalary = value;
					this.SendPropertyChanged("intSalary");
					this.OnintSalaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intHra", DbType="Decimal(6,0)")]
		public System.Nullable<decimal> intHra
		{
			get
			{
				return this._intHra;
			}
			set
			{
				if ((this._intHra != value))
				{
					this.OnintHraChanging(value);
					this.SendPropertyChanging();
					this._intHra = value;
					this.SendPropertyChanged("intHra");
					this.OnintHraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intDa", DbType="Decimal(6,0)")]
		public System.Nullable<decimal> intDa
		{
			get
			{
				return this._intDa;
			}
			set
			{
				if ((this._intDa != value))
				{
					this.OnintDaChanging(value);
					this.SendPropertyChanging();
					this._intDa = value;
					this.SendPropertyChanged("intDa");
					this.OnintDaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intWa", DbType="Decimal(6,0)")]
		public System.Nullable<decimal> intWa
		{
			get
			{
				return this._intWa;
			}
			set
			{
				if ((this._intWa != value))
				{
					this.OnintWaChanging(value);
					this.SendPropertyChanging();
					this._intWa = value;
					this.SendPropertyChanged("intWa");
					this.OnintWaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intTa", DbType="Decimal(6,0)")]
		public System.Nullable<decimal> intTa
		{
			get
			{
				return this._intTa;
			}
			set
			{
				if ((this._intTa != value))
				{
					this.OnintTaChanging(value);
					this.SendPropertyChanging();
					this._intTa = value;
					this.SendPropertyChanged("intTa");
					this.OnintTaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intOa", DbType="Decimal(6,0)")]
		public System.Nullable<decimal> intOa
		{
			get
			{
				return this._intOa;
			}
			set
			{
				if ((this._intOa != value))
				{
					this.OnintOaChanging(value);
					this.SendPropertyChanging();
					this._intOa = value;
					this.SendPropertyChanged("intOa");
					this.OnintOaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intOtPerHour", DbType="Decimal(6,0)")]
		public System.Nullable<decimal> intOtPerHour
		{
			get
			{
				return this._intOtPerHour;
			}
			set
			{
				if ((this._intOtPerHour != value))
				{
					this.OnintOtPerHourChanging(value);
					this.SendPropertyChanging();
					this._intOtPerHour = value;
					this.SendPropertyChanged("intOtPerHour");
					this.OnintOtPerHourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intGrossPay", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> intGrossPay
		{
			get
			{
				return this._intGrossPay;
			}
			set
			{
				if ((this._intGrossPay != value))
				{
					this.OnintGrossPayChanging(value);
					this.SendPropertyChanging();
					this._intGrossPay = value;
					this.SendPropertyChanged("intGrossPay");
					this.OnintGrossPayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dtResignDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> dtResignDate
		{
			get
			{
				return this._dtResignDate;
			}
			set
			{
				if ((this._dtResignDate != value))
				{
					this.OndtResignDateChanging(value);
					this.SendPropertyChanging();
					this._dtResignDate = value;
					this.SendPropertyChanged("dtResignDate");
					this.OndtResignDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_varResignReason", DbType="VarChar(10)")]
		public string varResignReason
		{
			get
			{
				return this._varResignReason;
			}
			set
			{
				if ((this._varResignReason != value))
				{
					this.OnvarResignReasonChanging(value);
					this.SendPropertyChanging();
					this._varResignReason = value;
					this.SendPropertyChanged("varResignReason");
					this.OnvarResignReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dtRejoinDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> dtRejoinDate
		{
			get
			{
				return this._dtRejoinDate;
			}
			set
			{
				if ((this._dtRejoinDate != value))
				{
					this.OndtRejoinDateChanging(value);
					this.SendPropertyChanging();
					this._dtRejoinDate = value;
					this.SendPropertyChanged("dtRejoinDate");
					this.OndtRejoinDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intUserId", DbType="Decimal(6,0)")]
		public System.Nullable<decimal> intUserId
		{
			get
			{
				return this._intUserId;
			}
			set
			{
				if ((this._intUserId != value))
				{
					this.OnintUserIdChanging(value);
					this.SendPropertyChanging();
					this._intUserId = value;
					this.SendPropertyChanged("intUserId");
					this.OnintUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dtDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> dtDate
		{
			get
			{
				return this._dtDate;
			}
			set
			{
				if ((this._dtDate != value))
				{
					this.OndtDateChanging(value);
					this.SendPropertyChanging();
					this._dtDate = value;
					this.SendPropertyChanged("dtDate");
					this.OndtDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bitApprove", DbType="Bit")]
		public System.Nullable<bool> bitApprove
		{
			get
			{
				return this._bitApprove;
			}
			set
			{
				if ((this._bitApprove != value))
				{
					this.OnbitApproveChanging(value);
					this.SendPropertyChanging();
					this._bitApprove = value;
					this.SendPropertyChanged("bitApprove");
					this.OnbitApproveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class GetIdentityResult
	{
		
		private System.Nullable<decimal> _IdentValue;
		
		public GetIdentityResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentValue", DbType="Decimal(38,0)")]
		public System.Nullable<decimal> IdentValue
		{
			get
			{
				return this._IdentValue;
			}
			set
			{
				if ((this._IdentValue != value))
				{
					this._IdentValue = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
